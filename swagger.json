{
  "swagger": "2.0",
  "info": {
    "title": "UiTdatabank v3",
    "description": "Version 3 of the UiTdatabank, a central database of cultural offers in the Flanders region.\n\n Most operations require that you authenticate first with your UiTID.",
    "contact": {
      "name": "publiq vzw",
      "url": "http://www.publiq.be",
      "email": "vragen@uitdatabank.be"
    },
    "version": "3.0.0"
  },
  "host": "udb-silex.dev",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "User",
      "description": "Operations related to users"
    },
    {
      "name": "Place",
      "description": "Operations related to places."
    },
    {
      "name": "Event",
      "description": "Operations related to events."
    },
    {
      "name": "Offer",
      "description": "Operations related to all offer types."
    },
    {
      "name": "Label",
      "description": "Operations related to labels."
    },
    {
      "name": "Organizer",
      "description": "Operations related to organizers."
    },
    {
      "name": "Media",
      "description": "Operations related to media."
    }
  ],
  "paths": {
    "/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Retrieve all information about the authenticated user.",
        "description": "Authentication is required.",
        "operationId": "getUserInformation",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The information available about the authenticated user.",
            "schema": {
              "required": [
                "id",
                "nick"
              ],
              "properties": {
                "id": {
                  "description": "A universally unique identifier.",
                  "type": "string",
                  "format": "uuid",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                },
                "nick": {
                  "type": "string",
                  "example": "El Pistolero"
                }
              }
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          }
        }
      }
    },
    "/user/offers/": {
      "get": {
        "summary": "Retrieve all offers for the current user",
        "description": "Authentication required",
        "operationId": "getUserOffers",
        "produces": [
          "application/ld+json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The number of the page which the paged result should return",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of offers",
            "schema": {
              "properties": {
                "@context": {
                  "type": "string",
                  "example": "http://www.w3.org/ns/hydra/context.jsonld"
                },
                "@type": {
                  "type": "string",
                  "example": "PagedCollection"
                },
                "itemsPerPage": {
                  "type": "integer",
                  "format": "int32",
                  "example": 30
                },
                "totalItems": {
                  "type": "integer",
                  "format": "int32",
                  "example": 1
                },
                "member": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "http://udb-backend.local/event/7616a359-b95c-48c0-9981-502732b8d957"
                      },
                      "type": {
                        "type": "string",
                        "example": "Event"
                      }
                    }
                  }
                },
                "firstPage": {
                  "type": "string",
                  "example": "http://udb-backend.local/user/offers?page=1"
                },
                "lastPage": {
                  "type": "string",
                  "example": "http://udb-backend.local/user/offers?page=29"
                },
                "nextPage": {
                  "type": "string",
                  "example": "http://udb-backend.local/user/offers?page=2"
                }
              },
              "required": [
                "itemsPerPage",
                "totalItems",
                "member"
              ]
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/events/": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Create a new cultural event.",
        "operationId": "createEvent",
        "produces": [
          "application/ld+json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "An object containing the necessary information to create a new cultural event.",
            "required": true,
            "schema": {
              "required": [
                "mainLanguage",
                "name",
                "type",
                "theme",
                "location",
                "calendarType",
                "startDate"
              ],
              "properties": {
                "mainLanguage": {
                  "type": "string",
                  "description": "The unique ISO 639-1 2 character language code.",
                  "example": "nl"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the event to create",
                  "example": "Name example"
                },
                "type": {
                  "type": "object",
                  "description": "One of the event types available at: http://taxonomy.uitdatabank.be/api/domain/eventtype/classification",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "0.50.4.0.0"
                    },
                    "label": {
                      "type": "string",
                      "example": "Concert"
                    },
                    "domain": {
                      "type": "string",
                      "enum": [
                        "eventtype"
                      ]
                    }
                  }
                },
                "theme": {
                  "type": "object",
                  "description": "One of the available themes from http://taxonomy.uitdatabank.be/api/domain/theme/classification",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "1.8.2.0.0"
                    },
                    "label": {
                      "type": "string",
                      "example": "Jazz en blues"
                    },
                    "domain": {
                      "type": "string",
                      "enum": [
                        "theme"
                      ],
                      "description": "This is hardcoded to 'thema' in the current application. It is passed to the API and then overwritten."
                    }
                  }
                },
                "location": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "description": "A universally unique identifier.",
                      "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the location.",
                      "example": "Caf√© Den Hemel"
                    },
                    "address": {
                      "type": "object",
                      "properties": {
                        "addressCountry": {
                          "type": "string",
                          "description": "The country code of the location.",
                          "example": "BE"
                        },
                        "addressLocality": {
                          "type": "string",
                          "description": "The locality name of the location.",
                          "example": "Scherpenheuvel-Zichem"
                        },
                        "postalCode": {
                          "type": "string",
                          "description": "The postalcode of the location.",
                          "example": "3271"
                        },
                        "streetAddress": {
                          "type": "string",
                          "description": "The street name and number information of the location.",
                          "example": "Hoornblaas 107"
                        }
                      },
                      "required": [
                        "addressCountry",
                        "addressLocality",
                        "postalCode",
                        "streetAddress"
                      ]
                    }
                  }
                },
                "calendarType": {
                  "type": "string",
                  "enum": [
                    "single",
                    "multiple",
                    "periodic",
                    "permanent"
                  ],
                  "example": "single"
                },
                "timestamps": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2015-05-07"
                      },
                      "startHour": {
                        "type": "string",
                        "example": "14:30"
                      },
                      "endHour": {
                        "type": "string",
                        "example": "14:30"
                      }
                    }
                  }
                },
                "startDate": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2015-05-07T14:30:00+00:00"
                },
                "endDate": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2015-05-07T14:30:00+00:00"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the created event.",
            "schema": {
              "required": [
                "eventId",
                "url"
              ],
              "properties": {
                "eventId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "The unique identifier of the cultural event.",
                  "example": "0823f57e-a6bd-450a-b4f5-8459b4b11043"
                },
                "url": {
                  "type": "string",
                  "format": "url",
                  "description": "The URL of the cultural event.",
                  "example": "http://udb-backend.local/event/0823f57e-a6bd-450a-b4f5-8459b4b11043"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          }
        }
      }
    },
    "/events/{cdbId}": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "View the details of a specific cultural event.",
        "operationId": "getEvent",
        "produces": [
          "application/ld+json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "An event detail.",
            "schema": {
              "required": [
                "@id",
                "name",
                "description",
                "creator",
                "created",
                "publisher",
                "calendarType"
              ],
              "properties": {
                "@id": {
                  "type": "string",
                  "example": "http://udb-backend.local/event/0823f57e-a6bd-450a-b4f5-8459b4b11043"
                },
                "name": {
                  "required": [
                    "nl"
                  ],
                  "properties": {
                    "nl": {
                      "type": "string",
                      "example": "Nederlands"
                    },
                    "de": {
                      "type": "string",
                      "example": "Deutsch"
                    },
                    "en": {
                      "type": "string",
                      "example": "English"
                    },
                    "fr": {
                      "type": "string",
                      "example": "Fran√ßais"
                    }
                  }
                },
                "description": {
                  "required": [
                    "nl"
                  ],
                  "properties": {
                    "nl": {
                      "type": "string",
                      "example": "Nederlands"
                    },
                    "de": {
                      "type": "string",
                      "example": "Deutsch"
                    },
                    "en": {
                      "type": "string",
                      "example": "English"
                    },
                    "fr": {
                      "type": "string",
                      "example": "Fran√ßais"
                    }
                  }
                },
                "availableFrom": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2015-05-07T14:30:00+00:00"
                },
                "image": {
                  "type": "string",
                  "example": "http://media.uitdatabank.be/20150416/153cfa0f-0d22-451e-bfd1-490b7c4ef109.jpg"
                },
                "labels": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "Voorbeeld label"
                  }
                },
                "calendarSummary": {
                  "type": "string",
                  "example": "Every first day of the month"
                },
                "location": {
                  "required": [
                    "name",
                    "address"
                  ],
                  "properties": {
                    "description": {
                      "required": [
                        "nl"
                      ],
                      "properties": {
                        "nl": {
                          "type": "string",
                          "example": "Nederlands"
                        },
                        "de": {
                          "type": "string",
                          "example": "Deutsch"
                        },
                        "en": {
                          "type": "string",
                          "example": "English"
                        },
                        "fr": {
                          "type": "string",
                          "example": "Fran√ßais"
                        }
                      }
                    },
                    "name": {
                      "required": [
                        "nl"
                      ],
                      "properties": {
                        "nl": {
                          "type": "string",
                          "example": "Nederlands"
                        },
                        "de": {
                          "type": "string",
                          "example": "Deutsch"
                        },
                        "en": {
                          "type": "string",
                          "example": "English"
                        },
                        "fr": {
                          "type": "string",
                          "example": "Fran√ßais"
                        }
                      }
                    },
                    "address": {
                      "required": [
                        "nl"
                      ],
                      "type": "object",
                      "properties": {
                        "nl": {
                          "type": "object",
                          "properties": {
                            "addressCountry": {
                              "type": "string",
                              "description": "The country code of the location.",
                              "example": "BE"
                            },
                            "addressLocality": {
                              "type": "string",
                              "description": "The locality name of the location.",
                              "example": "Scherpenheuvel-Zichem"
                            },
                            "postalCode": {
                              "type": "string",
                              "description": "The postalcode of the location.",
                              "example": "3271"
                            },
                            "streetAddress": {
                              "type": "string",
                              "description": "The street name and number information of the location.",
                              "example": "Hoornblaas 107"
                            }
                          },
                          "required": [
                            "addressCountry",
                            "addressLocality",
                            "postalCode",
                            "streetAddress"
                          ]
                        },
                        "de": {
                          "type": "object",
                          "properties": {
                            "addressCountry": {
                              "type": "string",
                              "description": "The country code of the location.",
                              "example": "BE"
                            },
                            "addressLocality": {
                              "type": "string",
                              "description": "The locality name of the location.",
                              "example": "Scherpenheuvel-Zichem"
                            },
                            "postalCode": {
                              "type": "string",
                              "description": "The postalcode of the location.",
                              "example": "3271"
                            },
                            "streetAddress": {
                              "type": "string",
                              "description": "The street name and number information of the location.",
                              "example": "Hoornblaas 107"
                            }
                          },
                          "required": [
                            "addressCountry",
                            "addressLocality",
                            "postalCode",
                            "streetAddress"
                          ]
                        },
                        "en": {
                          "type": "object",
                          "properties": {
                            "addressCountry": {
                              "type": "string",
                              "description": "The country code of the location.",
                              "example": "BE"
                            },
                            "addressLocality": {
                              "type": "string",
                              "description": "The locality name of the location.",
                              "example": "Scherpenheuvel-Zichem"
                            },
                            "postalCode": {
                              "type": "string",
                              "description": "The postalcode of the location.",
                              "example": "3271"
                            },
                            "streetAddress": {
                              "type": "string",
                              "description": "The street name and number information of the location.",
                              "example": "Hoornblaas 107"
                            }
                          },
                          "required": [
                            "addressCountry",
                            "addressLocality",
                            "postalCode",
                            "streetAddress"
                          ]
                        },
                        "fr": {
                          "type": "object",
                          "properties": {
                            "addressCountry": {
                              "type": "string",
                              "description": "The country code of the location.",
                              "example": "BE"
                            },
                            "addressLocality": {
                              "type": "string",
                              "description": "The locality name of the location.",
                              "example": "Scherpenheuvel-Zichem"
                            },
                            "postalCode": {
                              "type": "string",
                              "description": "The postalcode of the location.",
                              "example": "3271"
                            },
                            "streetAddress": {
                              "type": "string",
                              "description": "The street name and number information of the location.",
                              "example": "Hoornblaas 107"
                            }
                          },
                          "required": [
                            "addressCountry",
                            "addressLocality",
                            "postalCode",
                            "streetAddress"
                          ]
                        }
                      }
                    },
                    "geo": {
                      "properties": {
                        "latitude": {
                          "type": "string",
                          "description": "The latitude of the location.",
                          "example": "40.75"
                        },
                        "longitude": {
                          "type": "string",
                          "description": "The longitude of the location.",
                          "example": "73.98"
                        }
                      }
                    },
                    "bookingInfo": {
                      "required": [
                        "bookingInfo"
                      ],
                      "properties": {
                        "bookingInfo": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "format": "url",
                              "example": "https://www.domain.be/reservations/eventname"
                            },
                            "urlLabel": {
                              "type": "string",
                              "example": "Reserveer plaatsen"
                            },
                            "email": {
                              "type": "string",
                              "format": "email",
                              "example": "user@example.com"
                            },
                            "phone": {
                              "type": "string",
                              "example": "0123456789"
                            },
                            "availabilityStarts": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2015-05-07T14:30:00+00:00"
                            },
                            "availabilityEnds": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2015-05-07T14:30:00+00:00"
                            }
                          }
                        }
                      }
                    },
                    "priceInfo": {
                      "type": "array",
                      "items": {
                        "required": [
                          "category",
                          "name",
                          "price",
                          "priceCurrency"
                        ],
                        "properties": {
                          "category": {
                            "type": "string",
                            "enum": [
                              "base",
                              "tariff"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "example": "Basistarief"
                          },
                          "price": {
                            "type": "number",
                            "format": "float",
                            "example": 10
                          },
                          "priceCurrency": {
                            "type": "string",
                            "example": "EUR"
                          }
                        }
                      }
                    },
                    "terms": {
                      "type": "array",
                      "items": {
                        "required": [
                          "label",
                          "domain",
                          "id"
                        ],
                        "properties": {
                          "label": {
                            "type": "string",
                            "example": "Cycling"
                          },
                          "domain": {
                            "type": "string",
                            "example": "activities"
                          },
                          "id": {
                            "type": "string",
                            "example": "10.0.0.1"
                          }
                        }
                      }
                    },
                    "workflowStatus": {
                      "type": "string",
                      "enum": [
                        "DRAFT",
                        "READY_FOR_VALIDATION",
                        "APPROVED",
                        "REJECTED",
                        "DELETED"
                      ]
                    }
                  }
                },
                "organizer": {
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "STUK"
                    },
                    "address": {
                      "type": "object",
                      "properties": {
                        "addressCountry": {
                          "type": "string",
                          "description": "The country code of the location.",
                          "example": "BE"
                        },
                        "addressLocality": {
                          "type": "string",
                          "description": "The locality name of the location.",
                          "example": "Scherpenheuvel-Zichem"
                        },
                        "postalCode": {
                          "type": "string",
                          "description": "The postalcode of the location.",
                          "example": "3271"
                        },
                        "streetAddress": {
                          "type": "string",
                          "description": "The street name and number information of the location.",
                          "example": "Hoornblaas 107"
                        }
                      },
                      "required": [
                        "addressCountry",
                        "addressLocality",
                        "postalCode",
                        "streetAddress"
                      ]
                    },
                    "contactPoint": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "url",
                            "example": "http://google.be"
                          }
                        },
                        "email": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "email",
                            "example": "user@example.com"
                          }
                        },
                        "phone": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "format": "phone",
                            "example": "0123456789"
                          }
                        }
                      },
                      "required": [
                        "url",
                        "email",
                        "phone"
                      ]
                    },
                    "creator": {
                      "type": "string",
                      "example": "user@example.com"
                    },
                    "created": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2015-04-07T14:30:00+00:00"
                    },
                    "modified": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2015-04-07T16:33:27+00:00"
                    },
                    "url": {
                      "type": "string",
                      "format": "url",
                      "example": "http://www.stuk.be/"
                    },
                    "labels": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "format": "uuid",
                            "example": "80f63f49-5de2-42ea-9642-59fc0400f2c5"
                          },
                          "name": {
                            "type": "string",
                            "example": "Mijn label"
                          }
                        }
                      }
                    }
                  }
                },
                "bookingInfo": {
                  "required": [
                    "bookingInfo"
                  ],
                  "properties": {
                    "bookingInfo": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.domain.be/reservations/eventname"
                        },
                        "urlLabel": {
                          "type": "string",
                          "example": "Reserveer plaatsen"
                        },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "example": "user@example.com"
                        },
                        "phone": {
                          "type": "string",
                          "example": "0123456789"
                        },
                        "availabilityStarts": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2015-05-07T14:30:00+00:00"
                        },
                        "availabilityEnds": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2015-05-07T14:30:00+00:00"
                        }
                      }
                    }
                  }
                },
                "priceInfo": {
                  "type": "array",
                  "items": {
                    "required": [
                      "category",
                      "name",
                      "price",
                      "priceCurrency"
                    ],
                    "properties": {
                      "category": {
                        "type": "string",
                        "enum": [
                          "base",
                          "tariff"
                        ]
                      },
                      "name": {
                        "type": "string",
                        "example": "Basistarief"
                      },
                      "price": {
                        "type": "number",
                        "format": "float",
                        "example": 10
                      },
                      "priceCurrency": {
                        "type": "string",
                        "example": "EUR"
                      }
                    }
                  }
                },
                "terms": {
                  "type": "array",
                  "items": {
                    "required": [
                      "label",
                      "domain",
                      "id"
                    ],
                    "properties": {
                      "label": {
                        "type": "string",
                        "example": "Cycling"
                      },
                      "domain": {
                        "type": "string",
                        "example": "activities"
                      },
                      "id": {
                        "type": "string",
                        "example": "10.0.0.1"
                      }
                    }
                  }
                },
                "creator": {
                  "type": "string",
                  "example": "user@example.com"
                },
                "created": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2015-05-07T14:30:00+00:00"
                },
                "modified": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2015-05-07T14:30:00+00:00"
                },
                "endDate": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2015-05-07T14:30:00+00:00"
                },
                "startDate": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2015-05-07T14:30:00+00:00"
                },
                "calendarType": {
                  "type": "string",
                  "enum": [
                    "unknown",
                    "permanent",
                    "periodic",
                    "single"
                  ],
                  "example": "permanent"
                },
                "typicalAgeRange": {
                  "type": "string",
                  "example": "14-18"
                },
                "sameAs": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "http://www.uitinvlaanderen.be/agenda/e/zomerse-vrijdagen-den-engel/0823f57e-a6bd-450a-b4f5-8459b4b11043"
                  }
                },
                "seeAlso": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "example": "www.leuven.be"
                  }
                },
                "workflowStatus": {
                  "type": "string",
                  "enum": [
                    "DRAFT",
                    "READY_FOR_VALIDATION",
                    "APPROVED",
                    "REJECTED",
                    "DELETED"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Offer not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Event"
        ],
        "summary": "Delete a specific cultural event.",
        "operationId": "deleteEvent",
        "produces": [
          "application/ld+json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      }
    },
    "/events/{cdbId}/name/{lang}": {
      "put": {
        "tags": [
          "Offer"
        ],
        "summary": "Update the name of an offer in a given language.",
        "description": "Authentication is required.",
        "operationId": "OfferRestBaseController:updateName",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "lang",
            "in": "path",
            "description": "The unique ISO 639-1 2 character language code.",
            "required": true,
            "type": "string",
            "format": "string",
            "enum": [
              "nl",
              "fr",
              "en",
              "de"
            ]
          },
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "body",
            "in": "body",
            "description": "An object containing the name in the given language.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "De Sage van de Eenhoorn"
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      }
    },
    "/events/{cdbId}/description/{lang}": {
      "put": {
        "summary": "Translate the description of an offer.",
        "description": "Authentication is required.",
        "operationId": "translateOfferDescription",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "lang",
            "in": "path",
            "description": "The language of the translation.",
            "required": true,
            "type": "string",
            "enum": [
              "nl",
              "fr",
              "de",
              "en"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "description": "An object containing the description in the given language for a given offer.",
            "required": true,
            "schema": {
              "properties": {
                "description": {
                  "type": "string",
                  "example": "This is a description."
                }
              },
              "required": [
                "description"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        },
        "tags": [
          "Offer"
        ]
      }
    },
    "/events/{cdbId}/type/{typeId}": {
      "put": {
        "tags": [
          "Event"
        ],
        "summary": "Update the type of an event.",
        "description": "Authentication is required.",
        "operationId": "EditEventRestController:updateType",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "typeId",
            "in": "path",
            "description": "Refer to documentation for list of applicable event type id's at: http://documentatie.uitdatabank.be/content/json-ld/latest/events/event-type/",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      }
    },
    "/events/{cdbId}/theme/{themeId}": {
      "put": {
        "tags": [
          "Event"
        ],
        "summary": "Update the theme of an event.",
        "description": "Authentication is required.",
        "operationId": "OfferRestBaseController:updateName",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "themeId",
            "in": "path",
            "description": "Refer to documentation for list of applicable event theme id's at: http://documentatie.uitdatabank.be/content/json-ld/latest/events/event-theme/",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      }
    },
    "/events/{cdbId}/calendar": {
      "put": {
        "tags": [
          "Event"
        ],
        "summary": "Update the calendar of an event.",
        "description": "Authentication is required.",
        "operationId": "EditEventRestController:updateCalendar",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The data required to update the event calendar",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "calendarType": {
                  "example": "periodic",
                  "type": "string",
                  "enum": [
                    "single",
                    "multiple",
                    "periodic",
                    "permanent"
                  ]
                },
                "startDate": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2015-05-07T12:02:53+00:00"
                },
                "endDate": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2015-06-22T12:02:53+00:00"
                },
                "openingHours": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "dayOfWeek": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "monday",
                            "tuesday",
                            "wednesday",
                            "thursday",
                            "friday",
                            "saturday",
                            "sunday"
                          ]
                        }
                      },
                      "opens": {
                        "type": "string",
                        "example": "08:00"
                      },
                      "closes": {
                        "type": "string",
                        "example": "18:00"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      }
    },
    "/events/{cdbId}/location/{locationId}": {
      "put": {
        "tags": [
          "Event"
        ],
        "summary": "Update the location of an event.",
        "description": "Authentication is required.",
        "operationId": "EditEventRestController:updateLocation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "locationId",
            "in": "path",
            "description": "The universally unique identifier of a place.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      }
    },
    "/events/{cdbId}/audience": {
      "put": {
        "summary": "Set the target audience for an event.",
        "description": "Authentication is required.",
        "operationId": "setEventAudience",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "body",
            "in": "body",
            "description": "An object containing the audience information to set for the event.",
            "required": true,
            "schema": {
              "properties": {
                "audienceType": {
                  "type": "string",
                  "enum": [
                    "everyone",
                    "members",
                    "education"
                  ],
                  "example": "everyone"
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        },
        "tags": [
          "Event"
        ]
      }
    },
    "/events/{cdbId}/contactPoint": {
      "put": {
        "tags": [
          "Offer"
        ],
        "summary": "Update the contact point of an offer.",
        "operationId": "updateOfferContactPoint",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "body",
            "in": "body",
            "description": "An object containing the contact point for an offer.",
            "required": true,
            "schema": {
              "properties": {
                "contactPoint": {
                  "type": "object",
                  "required": [
                    "url",
                    "email",
                    "phone"
                  ],
                  "properties": {
                    "url": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "url",
                        "example": "http://google.be"
                      }
                    },
                    "email": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                      }
                    },
                    "phone": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "phone",
                        "example": "0123456789"
                      }
                    }
                  }
                }
              },
              "required": [
                "contactPoint"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      }
    },
    "/events/{cdbId}/bookingInfo": {
      "put": {
        "tags": [
          "Offer"
        ],
        "summary": "Update booking info of an offer.",
        "operationId": "updateOfferBookingInfo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "body",
            "in": "body",
            "description": "An object containing the booking info for an offer.",
            "required": true,
            "schema": {
              "required": [
                "bookingInfo"
              ],
              "properties": {
                "bookingInfo": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "format": "url",
                      "example": "https://www.domain.be/reservations/eventname"
                    },
                    "urlLabel": {
                      "type": "string",
                      "example": "Reserveer plaatsen"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "user@example.com"
                    },
                    "phone": {
                      "type": "string",
                      "example": "0123456789"
                    },
                    "availabilityStarts": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2015-05-07T14:30:00+00:00"
                    },
                    "availabilityEnds": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2015-05-07T14:30:00+00:00"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      }
    },
    "/events/{cdbId}/facilities/": {
      "put": {
        "tags": [
          "Event"
        ],
        "summary": "Update the facilities of an event.",
        "operationId": "updateEventFacilities",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "body",
            "in": "body",
            "description": "An array containing the facilities to attach to an event. Consult documentation for the active facilities for events: http://documentatie.uitdatabank.be/content/json-ld/latest/index.html",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Array of string ids of the facility types available at: http://documentatie.uitdatabank.be/content/json-ld/latest/events/event-facility/",
              "properties": {
                "facilities": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "3.13.1.0.0",
                      "3.13.2.0.0",
                      "3.17.1.0.0",
                      "3.17.2.0.0",
                      "3.17.3.0.0",
                      "3.23.2.0.0",
                      "3.26.0.0.0",
                      "3.27.0.0.0",
                      "3.28.0.0.0",
                      "3.29.0.0.0",
                      "3.30.0.0.0",
                      "3.31.0.0.0",
                      "3.32.0.0.0",
                      "3.33.0.0.0",
                      "3.34.0.0.0",
                      "3.35.0.0.0",
                      "3.36.0.0.0",
                      "3.37.0.0.0",
                      "3.38.0.0.0",
                      "3.39.0.0.0",
                      "3.40.0.0.0"
                    ]
                  },
                  "example": [
                    "3.13.1.0.0",
                    "3.13.2.0.0",
                    "3.17.1.0.0",
                    "3.17.2.0.0"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      }
    },
    "/events/{cdbId}/priceInfo": {
      "put": {
        "tags": [
          "Offer"
        ],
        "summary": "Update the price info of an offer.",
        "operationId": "updateOfferPriceInfo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "body",
            "in": "body",
            "description": "An array containing price info objects for an offer.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "required": [
                  "category",
                  "name",
                  "price"
                ],
                "properties": {
                  "category": {
                    "type": "string",
                    "enum": [
                      "base",
                      "tariff"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "example": "Basistarief"
                  },
                  "price": {
                    "type": "number",
                    "format": "float",
                    "example": 10
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      }
    },
    "/events/{cdbId}/typicalAgeRange": {
      "put": {
        "tags": [
          "Offer"
        ],
        "summary": "Set the typical age range of an offer.",
        "operationId": "setOfferTypicalAgeRange",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The age range to set for an offer.",
            "required": true,
            "schema": {
              "properties": {
                "typicalAgeRange": {
                  "type": "string",
                  "example": "1-12"
                }
              },
              "required": [
                "typicalAgeRange"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Offer"
        ],
        "summary": "Remove the typical age range from an offer.",
        "operationId": "removeOfferTypicalAgeRange",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      }
    },
    "/events/{cdbId}/labels/{label}": {
      "put": {
        "tags": [
          "Offer",
          "Label"
        ],
        "summary": "Add a label to an offer.",
        "description": "Authentication is required.",
        "operationId": "addLabelToOffer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "label",
            "in": "path",
            "description": "The label to add or remove from an offer.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Offer",
          "Label"
        ],
        "summary": "Remove a label from an offer.",
        "description": "Authentication is required.",
        "operationId": "removeLabelFromOffer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "label",
            "in": "path",
            "description": "The label to add or remove from an offer.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      }
    },
    "/events/{cdbId}/organizer/{organizerId}": {
      "put": {
        "tags": [
          "Offer",
          "Organizer"
        ],
        "summary": "Set the organization for an offer.",
        "operationId": "addOfferOrganization",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizerId",
            "in": "path",
            "description": "The unique identifier of an organization.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Offer",
          "Organizer"
        ],
        "summary": "Remove the current organization from an offer.",
        "operationId": "removeOfferOrganization",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizerId",
            "in": "path",
            "description": "The unique identifier of an organization.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      }
    },
    "/events/{cdbId}/images/": {
      "post": {
        "tags": [
          "Offer",
          "Media"
        ],
        "summary": "Add a MediaObject to an offer",
        "description": "Authentication is required",
        "operationId": "OfferAddImage",
        "produces": [
          "application/ld+json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The UUID of the image",
            "required": true,
            "schema": {
              "properties": {
                "mediaObjectId": {
                  "type": "string",
                  "example": "73695986-e4cf-4b29-8699-13d7cd77af8c"
                }
              },
              "required": [
                "mediaObjectId"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Image not found."
          }
        }
      }
    },
    "/events/{cdbId}/images/main": {
      "put": {
        "tags": [
          "Offer",
          "Media"
        ],
        "summary": "Select the main image of an offer.",
        "description": "Authentication is required",
        "operationId": "SelectOfferMainImage",
        "produces": [
          "application/ld+json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The UUID of the image",
            "required": true,
            "schema": {
              "properties": {
                "mediaObjectId": {
                  "type": "string",
                  "example": "73695986-e4cf-4b29-8699-13d7cd77af8c"
                }
              },
              "required": [
                "mediaObjectId"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      }
    },
    "/events/{cdbId}/images/{mediaObjectId}": {
      "delete": {
        "tags": [
          "Offer",
          "Media"
        ],
        "summary": "Remove an image from an offer.",
        "description": "Authentication is required",
        "operationId": "RemoveOfferImage",
        "produces": [
          "application/ld+json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "mediaObjectId",
            "in": "path",
            "description": "The universally unique identifier of an image.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      },
      "put": {
        "tags": [
          "Offer",
          "Media"
        ],
        "summary": "Update the info of an image.",
        "description": "Authentication is required.",
        "operationId": "updateOfferImage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "mediaObjectId",
            "in": "path",
            "description": "The universally unique identifier of an image.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "body",
            "in": "body",
            "description": "An object containing the image information that has to be changed.",
            "required": true,
            "schema": {
              "properties": {
                "description": {
                  "type": "string",
                  "description": "A description of the image."
                },
                "copyrightHolder": {
                  "type": "string",
                  "example": "Dirk Dirkington",
                  "description": "The name of the copyright holder."
                }
              },
              "required": [
                "description",
                "copyrightHolder"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      }
    },
    "/events/{cdbId}/permissions/": {
      "get": {
        "summary": "A list of permissions the current user has to an offer.",
        "operationId": "getOfferPermissions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of permissions",
            "schema": {
              "properties": {
                "permissions": {
                  "type": "array",
                  "example": [
                    "Aanbod bewerken",
                    "Aanbod modereren",
                    "Aanbod verwijderen"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/events/{cdbId}/permissions/{userId}": {
      "get": {
        "summary": "A list of permissions the current user has to an offer.",
        "operationId": "getOfferPermissionsPerUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The unique identifier of a user.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of permissions",
            "schema": {
              "properties": {
                "permissions": {
                  "type": "array",
                  "example": [
                    "Aanbod bewerken",
                    "Aanbod modereren",
                    "Aanbod verwijderen"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/images/": {
      "post": {
        "summary": "Create a new media object for an image.",
        "description": "Authentication is required",
        "operationId": "createImage",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "The image",
            "required": true,
            "type": "file"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The description",
            "required": true,
            "type": "string"
          },
          {
            "name": "copyrightHolder",
            "in": "formData",
            "description": "The copyright holder",
            "required": true,
            "type": "string"
          },
          {
            "name": "language",
            "in": "formData",
            "description": "The language of the image",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful Image upload response.",
            "schema": {
              "required": [
                "commandId",
                "imageId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                },
                "imageId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "43ebd908-aa67-4efc-8be3-ac9889c6a4a6"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          }
        },
        "tags": [
          "Media"
        ]
      }
    },
    "/images/{id}": {
      "get": {
        "summary": "View the details of a specific image.",
        "description": "Authentication is required",
        "operationId": "getImage",
        "produces": [
          "application/ld+json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The universally unique identifier of the media object.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "An media object detail.",
            "schema": {
              "properties": {
                "@id": {
                  "type": "string",
                  "example": "http://udb-silex.dev/images/04C47992-B01E-4EE4-96ED-289F22638324"
                },
                "@type": {
                  "type": "string",
                  "example": "schema:MediaObject"
                },
                "contentUrl": {
                  "type": "string",
                  "example": "http://udb-silex.dev/media/de305d54-75b4-431b-adb2-eb6b9e546014.png"
                },
                "thumbnailUrl": {
                  "type": "string",
                  "example": "http://udb-silex.dev/media/de305d54-75b4-431b-adb2-eb6b9e546014.png"
                },
                "description": {
                  "type": "string",
                  "example": "Allemaal Roze konijnen"
                },
                "copyrightHolder": {
                  "type": "string",
                  "example": "Toto het roze konijn"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        },
        "tags": [
          "Media"
        ]
      }
    },
    "/places/": {
      "post": {
        "tags": [
          "Place"
        ],
        "summary": "Create a new place.",
        "operationId": "createPlace",
        "produces": [
          "application/ld+json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "An object containing the necessary information to create a new place.",
            "required": true,
            "schema": {
              "required": [
                "mainLanguage",
                "name",
                "type",
                "address",
                "calendarType",
                "openingHours"
              ],
              "properties": {
                "mainLanguage": {
                  "type": "string",
                  "description": "The unique ISO 639-1 2 character language code.",
                  "example": "nl"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the place to create",
                  "example": "Name example"
                },
                "type": {
                  "type": "object",
                  "description": "One of the types available at: http://taxonomy.uitdatabank.be/api/domain/eventtype/classification (for both events and places)",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "ekdc4ATGoUitCa0e6me6xA"
                    },
                    "label": {
                      "type": "string",
                      "example": "Horeca"
                    },
                    "domain": {
                      "type": "string",
                      "enum": [
                        "eventtype"
                      ]
                    }
                  }
                },
                "address": {
                  "type": "object",
                  "properties": {
                    "addressCountry": {
                      "type": "string",
                      "description": "The country code of the location.",
                      "example": "BE"
                    },
                    "addressLocality": {
                      "type": "string",
                      "description": "The locality name of the location.",
                      "example": "Scherpenheuvel-Zichem"
                    },
                    "postalCode": {
                      "type": "string",
                      "description": "The postalcode of the location.",
                      "example": "3271"
                    },
                    "streetAddress": {
                      "type": "string",
                      "description": "The street name and number information of the location.",
                      "example": "Hoornblaas 107"
                    }
                  },
                  "required": [
                    "addressCountry",
                    "addressLocality",
                    "postalCode",
                    "streetAddress"
                  ]
                },
                "calendarType": {
                  "type": "string",
                  "enum": [
                    "periodic",
                    "permanent"
                  ],
                  "example": "permanent"
                },
                "openingHours": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "dayOfWeek": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "monday",
                            "tuesday",
                            "wednesday",
                            "thursday",
                            "friday",
                            "saturday",
                            "sunday"
                          ]
                        }
                      },
                      "opens": {
                        "type": "string",
                        "example": "14:30"
                      },
                      "closes": {
                        "type": "string",
                        "example": "17:00"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the created event.",
            "schema": {
              "required": [
                "placeId",
                "url"
              ],
              "properties": {
                "placeId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "The unique identifier of the place.",
                  "example": "0823f57e-a6bd-450a-b4f5-8459b4b11043"
                },
                "url": {
                  "type": "string",
                  "format": "url",
                  "description": "The URL of the place.",
                  "example": "http://udb-backend.local/place/0823f57e-a6bd-450a-b4f5-8459b4b11043"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          }
        }
      },
      "get": {
        "tags": [
          "Place"
        ],
        "summary": "List places.",
        "description": "",
        "operationId": "listPlaces",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "postalCode",
            "in": "query",
            "description": "Limit the list to places located in the area with this postal code.",
            "type": "string"
          },
          {
            "name": "embed",
            "in": "query",
            "description": "Whether to get the actual bodies of the results",
            "required": false,
            "default": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A PagedCollection of places matching the supplied criteria.",
            "schema": {
              "properties": {
                "@context": {
                  "type": "string",
                  "example": "http://www.w3.org/ns/hydra/context.jsonld"
                },
                "@type": {
                  "type": "string",
                  "example": "PagedCollection"
                },
                "itemsPerPage": {
                  "type": "integer",
                  "format": "int32",
                  "example": 30
                },
                "totalItems": {
                  "type": "integer",
                  "format": "int32",
                  "example": 1
                },
                "member": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@id": {
                        "type": "string",
                        "example": "http://udb-backend.local/place/7616a359-b95c-48c0-9981-502732b8d957"
                      },
                      "@context": {
                        "type": "string",
                        "example": "/contexts/place"
                      }
                    }
                  }
                },
                "firstPage": {
                  "type": "string",
                  "example": "http://udb-backend.local/user/places?page=1"
                },
                "lastPage": {
                  "type": "string",
                  "example": "http://udb-backend.local/user/places?page=29"
                },
                "nextPage": {
                  "type": "string",
                  "example": "http://udb-backend.local/user/places?page=2"
                }
              },
              "required": [
                "itemsPerPage",
                "totalItems",
                "member"
              ]
            }
          }
        }
      }
    },
    "/places/{cdbId}": {
      "get": {
        "tags": [
          "Place"
        ],
        "summary": "View the details of a specific place.",
        "operationId": "getPlace",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "A place detail.",
            "schema": {
              "required": [
                "name",
                "address"
              ],
              "properties": {
                "name": {
                  "required": [
                    "nl"
                  ],
                  "properties": {
                    "nl": {
                      "type": "string",
                      "example": "Nederlands"
                    },
                    "de": {
                      "type": "string",
                      "example": "Deutsch"
                    },
                    "en": {
                      "type": "string",
                      "example": "English"
                    },
                    "fr": {
                      "type": "string",
                      "example": "Fran√ßais"
                    }
                  }
                },
                "description": {
                  "required": [
                    "nl"
                  ],
                  "properties": {
                    "nl": {
                      "type": "string",
                      "example": "Nederlands"
                    },
                    "de": {
                      "type": "string",
                      "example": "Deutsch"
                    },
                    "en": {
                      "type": "string",
                      "example": "English"
                    },
                    "fr": {
                      "type": "string",
                      "example": "Fran√ßais"
                    }
                  }
                },
                "address": {
                  "type": "object",
                  "properties": {
                    "addressCountry": {
                      "type": "string",
                      "description": "The country code of the location.",
                      "example": "BE"
                    },
                    "addressLocality": {
                      "type": "string",
                      "description": "The locality name of the location.",
                      "example": "Scherpenheuvel-Zichem"
                    },
                    "postalCode": {
                      "type": "string",
                      "description": "The postalcode of the location.",
                      "example": "3271"
                    },
                    "streetAddress": {
                      "type": "string",
                      "description": "The street name and number information of the location.",
                      "example": "Hoornblaas 107"
                    }
                  },
                  "required": [
                    "addressCountry",
                    "addressLocality",
                    "postalCode",
                    "streetAddress"
                  ]
                },
                "geo": {
                  "properties": {
                    "latitude": {
                      "type": "string",
                      "description": "The latitude of the location.",
                      "example": "40.75"
                    },
                    "longitude": {
                      "type": "string",
                      "description": "The longitude of the location.",
                      "example": "73.98"
                    }
                  }
                },
                "bookingInfo": {
                  "required": [
                    "bookingInfo"
                  ],
                  "properties": {
                    "bookingInfo": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "url",
                          "example": "https://www.domain.be/reservations/eventname"
                        },
                        "urlLabel": {
                          "type": "string",
                          "example": "Reserveer plaatsen"
                        },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "example": "user@example.com"
                        },
                        "phone": {
                          "type": "string",
                          "example": "0123456789"
                        },
                        "availabilityStarts": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2015-05-07T14:30:00+00:00"
                        },
                        "availabilityEnds": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2015-05-07T14:30:00+00:00"
                        }
                      }
                    }
                  }
                },
                "priceInfo": {
                  "type": "array",
                  "items": {
                    "required": [
                      "category",
                      "name",
                      "price",
                      "priceCurrency"
                    ],
                    "properties": {
                      "category": {
                        "type": "string",
                        "enum": [
                          "base",
                          "tariff"
                        ]
                      },
                      "name": {
                        "type": "string",
                        "example": "Basistarief"
                      },
                      "price": {
                        "type": "number",
                        "format": "float",
                        "example": 10
                      },
                      "priceCurrency": {
                        "type": "string",
                        "example": "EUR"
                      }
                    }
                  }
                },
                "terms": {
                  "type": "array",
                  "items": {
                    "required": [
                      "label",
                      "domain",
                      "id"
                    ],
                    "properties": {
                      "label": {
                        "type": "string",
                        "example": "Cycling"
                      },
                      "domain": {
                        "type": "string",
                        "example": "activities"
                      },
                      "id": {
                        "type": "string",
                        "example": "10.0.0.1"
                      }
                    }
                  }
                },
                "workflowStatus": {
                  "type": "string",
                  "enum": [
                    "DRAFT",
                    "READY_FOR_VALIDATION",
                    "APPROVED",
                    "REJECTED",
                    "DELETED"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Offer not found."
          }
        }
      }
    },
    "/places/{cdbId}/name/{lang}": {
      "put": {
        "tags": [
          "Offer"
        ],
        "summary": "Update the name of an offer in a given language.",
        "description": "Authentication is required.",
        "operationId": "OfferRestBaseController:updateName",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "lang",
            "in": "path",
            "description": "The unique ISO 639-1 2 character language code.",
            "required": true,
            "type": "string",
            "format": "string",
            "enum": [
              "nl",
              "fr",
              "en",
              "de"
            ]
          },
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "body",
            "in": "body",
            "description": "An object containing the name in the given language.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "De Sage van de Eenhoorn"
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      }
    },
    "/places/{cdbId}/description/{lang}": {
      "put": {
        "summary": "Translate the description of an offer.",
        "description": "Authentication is required.",
        "operationId": "translateOfferDescription",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "lang",
            "in": "path",
            "description": "The language of the translation.",
            "required": true,
            "type": "string",
            "enum": [
              "nl",
              "fr",
              "de",
              "en"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "description": "An object containing the description in the given language for a given offer.",
            "required": true,
            "schema": {
              "properties": {
                "description": {
                  "type": "string",
                  "example": "This is a description."
                }
              },
              "required": [
                "description"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        },
        "tags": [
          "Offer"
        ]
      }
    },
    "/places/{cdbId}/type/{typeId}": {
      "put": {
        "tags": [
          "Place"
        ],
        "summary": "Update the type of a place.",
        "description": "Authentication is required.",
        "operationId": "EditPlaceRestController:updateType",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "typeId",
            "in": "path",
            "description": "Refer to documentation for list of applicable place type id's at: http://documentatie.uitdatabank.be/content/json-ld/latest/places/place-type/",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      }
    },
    "/places/{cdbId}/address/{lang}": {
      "put": {
        "tags": [
          "Place"
        ],
        "summary": "Update the address of a place in a specific language.",
        "operationId": "updatePlaceAddress",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "lang",
            "in": "path",
            "description": "The unique ISO 639-1 2 character language code.",
            "required": true,
            "type": "string",
            "format": "string",
            "enum": [
              "nl",
              "fr",
              "en",
              "de"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "description": "An object containing the address info of a place.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "addressCountry": {
                  "type": "string",
                  "description": "The country code of the location.",
                  "example": "BE"
                },
                "addressLocality": {
                  "type": "string",
                  "description": "The locality name of the location.",
                  "example": "Scherpenheuvel-Zichem"
                },
                "postalCode": {
                  "type": "string",
                  "description": "The postalcode of the location.",
                  "example": "3271"
                },
                "streetAddress": {
                  "type": "string",
                  "description": "The street name and number information of the location.",
                  "example": "Hoornblaas 107"
                }
              },
              "required": [
                "addressCountry",
                "addressLocality",
                "postalCode",
                "streetAddress"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      }
    },
    "/places/{cdbId}/calendar": {
      "put": {
        "tags": [
          "Place"
        ],
        "summary": "Update the calendar of a place.",
        "description": "Authentication is required.",
        "operationId": "EditPlaceRestController:updateCalendar",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The data required to update the place calendar",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "calendarType": {
                  "example": "periodic",
                  "type": "string",
                  "enum": [
                    "periodic",
                    "permanent"
                  ]
                },
                "startDate": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2015-05-07T12:02:53+00:00"
                },
                "endDate": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2015-06-22T12:02:53+00:00"
                },
                "openingHours": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "dayOfWeek": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "monday",
                            "tuesday",
                            "wednesday",
                            "thursday",
                            "friday",
                            "saturday",
                            "sunday"
                          ]
                        }
                      },
                      "opens": {
                        "type": "string",
                        "example": "08:00"
                      },
                      "closes": {
                        "type": "string",
                        "example": "18:00"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      }
    },
    "/places/{cdbId}/contactPoint": {
      "put": {
        "tags": [
          "Offer"
        ],
        "summary": "Update the contact point of an offer.",
        "operationId": "updateOfferContactPoint",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "body",
            "in": "body",
            "description": "An object containing the contact point for an offer.",
            "required": true,
            "schema": {
              "properties": {
                "contactPoint": {
                  "type": "object",
                  "required": [
                    "url",
                    "email",
                    "phone"
                  ],
                  "properties": {
                    "url": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "url",
                        "example": "http://google.be"
                      }
                    },
                    "email": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                      }
                    },
                    "phone": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "phone",
                        "example": "0123456789"
                      }
                    }
                  }
                }
              },
              "required": [
                "contactPoint"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      }
    },
    "/places/{cdbId}/bookingInfo": {
      "put": {
        "tags": [
          "Offer"
        ],
        "summary": "Update booking info of an offer.",
        "operationId": "updateOfferBookingInfo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "body",
            "in": "body",
            "description": "An object containing the booking info for an offer.",
            "required": true,
            "schema": {
              "required": [
                "bookingInfo"
              ],
              "properties": {
                "bookingInfo": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "format": "url",
                      "example": "https://www.domain.be/reservations/eventname"
                    },
                    "urlLabel": {
                      "type": "string",
                      "example": "Reserveer plaatsen"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "user@example.com"
                    },
                    "phone": {
                      "type": "string",
                      "example": "0123456789"
                    },
                    "availabilityStarts": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2015-05-07T14:30:00+00:00"
                    },
                    "availabilityEnds": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2015-05-07T14:30:00+00:00"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      }
    },
    "/places/{cdbId}/facilities/": {
      "put": {
        "tags": [
          "Place"
        ],
        "summary": "Update the facilities of a place.",
        "operationId": "updatePlaceFacilities",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "body",
            "in": "body",
            "description": "An array containing the facilities to attach to a place. Consult documentation for the active facilities for places: http://documentatie.uitdatabank.be/content/json-ld/latest/index.html",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Array of string ids of the facility types available at: http://documentatie.uitdatabank.be/content/json-ld/latest/places/place-facility/",
              "properties": {
                "facilities": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "3.13.1.0.0",
                      "3.23.3.0.0",
                      "3.25.0.0.0",
                      "3.26.0.0.0"
                    ]
                  },
                  "example": [
                    "3.13.1.0.0",
                    "3.23.3.0.0"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      }
    },
    "/places/{cdbId}/priceInfo": {
      "put": {
        "tags": [
          "Offer"
        ],
        "summary": "Update the price info of an offer.",
        "operationId": "updateOfferPriceInfo",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "body",
            "in": "body",
            "description": "An array containing price info objects for an offer.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "required": [
                  "category",
                  "name",
                  "price"
                ],
                "properties": {
                  "category": {
                    "type": "string",
                    "enum": [
                      "base",
                      "tariff"
                    ]
                  },
                  "name": {
                    "type": "string",
                    "example": "Basistarief"
                  },
                  "price": {
                    "type": "number",
                    "format": "float",
                    "example": 10
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      }
    },
    "/places/{cdbId}/typicalAgeRange": {
      "put": {
        "tags": [
          "Offer"
        ],
        "summary": "Set the typical age range of an offer.",
        "operationId": "setOfferTypicalAgeRange",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The age range to set for an offer.",
            "required": true,
            "schema": {
              "properties": {
                "typicalAgeRange": {
                  "type": "string",
                  "example": "1-12"
                }
              },
              "required": [
                "typicalAgeRange"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Offer"
        ],
        "summary": "Remove the typical age range from an offer.",
        "operationId": "removeOfferTypicalAgeRange",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      }
    },
    "/places/{cdbId}/labels/{label}": {
      "put": {
        "tags": [
          "Offer",
          "Label"
        ],
        "summary": "Add a label to an offer.",
        "description": "Authentication is required.",
        "operationId": "addLabelToOffer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "label",
            "in": "path",
            "description": "The label to add or remove from an offer.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Offer",
          "Label"
        ],
        "summary": "Remove a label from an offer.",
        "description": "Authentication is required.",
        "operationId": "removeLabelFromOffer",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "label",
            "in": "path",
            "description": "The label to add or remove from an offer.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      }
    },
    "/places/{cdbId}/organizer/{organizerId}": {
      "put": {
        "tags": [
          "Offer",
          "Organizer"
        ],
        "summary": "Set the organization for an offer.",
        "operationId": "addOfferOrganization",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizerId",
            "in": "path",
            "description": "The unique identifier of an organization.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Offer",
          "Organizer"
        ],
        "summary": "Remove the current organization from an offer.",
        "operationId": "removeOfferOrganization",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "organizerId",
            "in": "path",
            "description": "The unique identifier of an organization.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      }
    },
    "/places/{cdbId}/images/": {
      "post": {
        "tags": [
          "Offer",
          "Media"
        ],
        "summary": "Add a MediaObject to an offer",
        "description": "Authentication is required",
        "operationId": "OfferAddImage",
        "produces": [
          "application/ld+json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The UUID of the image",
            "required": true,
            "schema": {
              "properties": {
                "mediaObjectId": {
                  "type": "string",
                  "example": "73695986-e4cf-4b29-8699-13d7cd77af8c"
                }
              },
              "required": [
                "mediaObjectId"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Image not found."
          }
        }
      }
    },
    "/places/{cdbId}/images/main": {
      "put": {
        "tags": [
          "Offer",
          "Media"
        ],
        "summary": "Select the main image of an offer.",
        "description": "Authentication is required",
        "operationId": "SelectOfferMainImage",
        "produces": [
          "application/ld+json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The UUID of the image",
            "required": true,
            "schema": {
              "properties": {
                "mediaObjectId": {
                  "type": "string",
                  "example": "73695986-e4cf-4b29-8699-13d7cd77af8c"
                }
              },
              "required": [
                "mediaObjectId"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      }
    },
    "/places/{cdbId}/images/{mediaObjectId}": {
      "delete": {
        "tags": [
          "Offer",
          "Media"
        ],
        "summary": "Remove an image from an offer.",
        "description": "Authentication is required",
        "operationId": "RemoveOfferImage",
        "produces": [
          "application/ld+json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "mediaObjectId",
            "in": "path",
            "description": "The universally unique identifier of an image.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      },
      "put": {
        "tags": [
          "Offer",
          "Media"
        ],
        "summary": "Update the info of an image.",
        "description": "Authentication is required.",
        "operationId": "updateOfferImage",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "mediaObjectId",
            "in": "path",
            "description": "The universally unique identifier of an image.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "body",
            "in": "body",
            "description": "An object containing the image information that has to be changed.",
            "required": true,
            "schema": {
              "properties": {
                "description": {
                  "type": "string",
                  "description": "A description of the image."
                },
                "copyrightHolder": {
                  "type": "string",
                  "example": "Dirk Dirkington",
                  "description": "The name of the copyright holder."
                }
              },
              "required": [
                "description",
                "copyrightHolder"
              ]
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Info on the command that was queued.",
            "schema": {
              "required": [
                "commandId"
              ],
              "properties": {
                "commandId": {
                  "type": "string",
                  "format": "uuid",
                  "description": "A universally unique identifier.",
                  "example": "6f072ba8-c510-40ac-b387-51f582650e27"
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        }
      }
    },
    "/places/{cdbId}/permissions/": {
      "get": {
        "summary": "A list of permissions the current user has to an offer.",
        "operationId": "getOfferPermissions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of permissions",
            "schema": {
              "properties": {
                "permissions": {
                  "type": "array",
                  "example": [
                    "Aanbod bewerken",
                    "Aanbod modereren",
                    "Aanbod verwijderen"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/places/{cdbId}/permissions/{userId}": {
      "get": {
        "summary": "A list of permissions the current user has to an offer.",
        "operationId": "getOfferPermissionsPerUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "cdbId",
            "in": "path",
            "description": "The unique identifier of an offer. The uuid of older items will deviate from the format specification.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The unique identifier of a user.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of permissions",
            "schema": {
              "properties": {
                "permissions": {
                  "type": "array",
                  "example": [
                    "Aanbod bewerken",
                    "Aanbod modereren",
                    "Aanbod verwijderen"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "An API specific problem occurred.",
            "schema": {
              "properties": {
                "type": {
                  "type": "string",
                  "format": "url"
                },
                "title": {
                  "type": "string"
                },
                "status": {
                  "type": "integer"
                },
                "validation_messages": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "title",
                "type",
                "status"
              ]
            }
          },
          "401": {
            "description": "Authentication with UiTID and a valid JWT is required."
          },
          "403": {
            "description": "Access is not allowed for the provided authorization."
          },
          "404": {
            "description": "Offer not found."
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/organizers/": {
      "get": {
        "tags": [
          "Organizer"
        ],
        "summary": "Search organizers.",
        "description": "",
        "operationId": "searchOrganizers",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "The name of the organizer to be used for fuzzy search",
            "required": false,
            "type": "string"
          },
          {
            "name": "website",
            "in": "query",
            "description": "The url of the organizer website",
            "required": false,
            "type": "string",
            "format": "url"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The limit of organizers included in the result set. When omitted it defaults to 30 items.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "start",
            "in": "query",
            "description": "The number of organizers to skip from the start of the result set.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "embed",
            "in": "query",
            "description": "Whether to get the actual bodies of the results",
            "required": false,
            "default": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "A PagedCollection of organizers matching the supplied criteria.",
            "schema": {
              "properties": {
                "@context": {
                  "type": "string",
                  "example": "http://www.w3.org/ns/hydra/context.jsonld"
                },
                "@type": {
                  "type": "string",
                  "example": "PagedCollection"
                },
                "itemsPerPage": {
                  "type": "integer",
                  "format": "int32",
                  "example": 30
                },
                "totalItems": {
                  "type": "integer",
                  "format": "int32",
                  "example": 1
                },
                "member": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@id": {
                        "type": "string",
                        "example": "http://udb-backend.local/organizers/7616a359-b95c-48c0-9981-502732b8d957"
                      },
                      "@context": {
                        "type": "string",
                        "example": "/contexts/organizer"
                      }
                    }
                  }
                },
                "firstPage": {
                  "type": "string",
                  "example": "http://udb-backend.local/user/places?page=1"
                },
                "lastPage": {
                  "type": "string",
                  "example": "http://udb-backend.local/user/places?page=29"
                },
                "nextPage": {
                  "type": "string",
                  "example": "http://udb-backend.local/user/places?page=2"
                }
              },
              "required": [
                "itemsPerPage",
                "totalItems",
                "member"
              ]
            }
          }
        }
      }
    }
  }
}
